<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.hanskruse</groupId>
  <artifactId>noaber</artifactId>
  <version>0.0.12</version>
  <packaging>jar</packaging>
  <name>jnoaber</name>
  <description>A utility library for functional programming in Java 8</description>
  <url>https://github.com/nicenemo/jnoaber</url>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>nicenemo</id>
      <name>Hans Kruse</name>
      <email>kruse@hanskruse.eu</email>
      <url>https://hanskruse.eu</url>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git://github.com/nicenemo/jnoaber.git</connection>
    <developerConnection>scm:git:git@github.com:nicenemo/jnoaber.git</developerConnection>
    <url>https://github.com/nicenemo/jnoaber</url>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/nicenemo/jnoaber/issues</url>
  </issueManagement>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <name>OSSRH staging repository</name>
      <url>https://s01.oss.sonatype.org/content/groups/staging</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <name>OSSRH snapshot repository</name>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <checkstyle.configLocation>hans_kruse_checks.xml</checkstyle.configLocation>
    <checkstyle.suppressionsLocation>suppressions.xml</checkstyle.suppressionsLocation>
    <editorconfig-plugin.version>0.1.1</editorconfig-plugin.version>
    <hamcrest.version>2.2</hamcrest.version>
    <jacoco.version>0.8.8</jacoco.version>
    <javadoc.version>3.4.1</javadoc.version>
    <jdk.version>1.8</jdk.version>
    <junit-jupiter.version>5.9.1</junit-jupiter.version>
    <junit-platform.version>1.7.0</junit-platform.version>
    <jxr.version>3.3.0</jxr.version>
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven.clean.version>3.2.0</maven.clean.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.testSource>1.8</maven.compiler.testSource>
    <maven.compiler.testTarget>1.8</maven.compiler.testTarget>
    <maven.dependency.version>3.3.0</maven.dependency.version>
    <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
    <maven.jar.version>3.3.0</maven.jar.version>
    <maven.resources.version>3.3.0</maven.resources.version>
    <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
    <mockito.version>4.8.0</mockito.version>
    <mvncheckstyle.version>3.2.0</mvncheckstyle.version>
    <mvncompiler.version>3.8.1</mvncompiler.version>
    <mvn-gpg-plugin.version>3.0.1</mvn-gpg-plugin.version>
    <mvnprojectinforeports.version>3.4.1</mvnprojectinforeports.version>
    <mvnsurefire.version>3.0.0-M7</mvnsurefire.version>
    <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
    <pitest-junit5-plugin.version>1.1.0</pitest-junit5-plugin.version>
    <pitest.version>1.9.5</pitest.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <quicktheories.version>0.26</quicktheories.version>
    <reporting.version>2.7.1</reporting.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.quicktheories</groupId>
      <artifactId>quicktheories</artifactId>
      <version>${quicktheories.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>install</defaultGoal>
    <plugins>
      <!--

        Pitest is a mutation testing tool. enable it to see coverage missing not caught by SonarQube /Jaccoco.
        It helped in finding/solving a few bugs and eliminating some code. Also for adding reggression tests it is really useful.

        See https://www.pitest.org for more info.

       Run it via: mvn org.pitest:pitest-maven:mutationCoverage

      -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <timeoutConstant>60000</timeoutConstant>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc.version}</version>
        <executions>
          <execution>
            <id>aggregate</id>
            <phase>site</phase>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <show>public</show>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <executions>
          <execution>
            <id>default-compile</id>
            <configuration>
              <showDeprecation>true</showDeprecation>
              <showWarnings>true</showWarnings>
              <compilerArguments>
                <source>${maven.compiler.target}</source>
                <target>${maven.compiler.source}</target>
              </compilerArguments>
            </configuration>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <configuration>
              <showDeprecation>true</showDeprecation>
              <showWarnings>true</showWarnings>
              <compilerArguments>
                <source>${maven.compiler.testTarget}</source>
                <target>${maven.compiler.testSource}</target>
              </compilerArguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/shaded</outputDirectory>
          <archive>
            <manifest>
              <addClasspath>false</addClasspath>
            </manifest>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${mvnsurefire.version}</version>
        <configuration>
          <parallel>methods</parallel>
          <threadCount>10</threadCount>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${mvnsurefire.version}</version>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${mvncheckstyle.version}</version>
        <configuration>
          <configLocation>${checkstyle.configLocation}</configLocation>
          <suppressionsLocation>${checkstyle.suppressionsLocation}</suppressionsLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failOnValidation>false</failOnValidation>
          <failOnViolation>false</failOnViolation>
          <failsOnError>false</failsOnError>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${mvnprojectinforeports.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <!-- implementation is needed only for Maven 2 -->
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <!-- implementation is needed only for Maven 2 -->
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.01</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${jxr.version}</version>
      </plugin>
      <plugin>
        <groupId>org.ec4j.maven</groupId>
        <artifactId>editorconfig-maven-plugin</artifactId>
        <version>${editorconfig-plugin.version}</version>
        <executions>
          <execution>
            <id>check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${mvn-gpg-plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
        <!-- Prevent gpg from using pinentry programs -->
          <gpgArguments>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
        </configuration>
      </plugin>
      <!-- skip standard maven deploy plugin and use sonatype instead -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
          <skipStaging>false</skipStaging>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7</version>
        <configuration>
          <port>9000</port>
          <tempWebappDirectory>${project.build.directory}/target/${project.artifactId}</tempWebappDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${mvncheckstyle.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <configLocation>${checkstyle.configLocation}</configLocation>
          <suppressionsLocation>${checkstyle.suppressionsLocation}</suppressionsLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failOnValidation>false</failOnValidation>
          <failOnViolation>false</failOnViolation>
          <failsOnError>false</failsOnError>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${jxr.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
